        <?php
        $this->Widget->clear();
        $this->Widget->create($this->_('AdminClients.createinvoice.boxtitle_createinvoice', true), ['id' => 'admin_clients_creatinvoice']);
        ?>
        <div class="inner">
            <?php $this->Form->create(null, ['id' => 'create-invoice', 'class' => 'disable-on-submit']);?>
            <table class="table invoice">
                <thead>
                    <th>
                        <tr class="heading_row">
                            <td><?php $this->_('AdminClients.createinvoice.heading_description');?></td>
                            <td><?php $this->_('AdminClients.createinvoice.heading_quantity');?></td>
                            <td><?php $this->_('AdminClients.createinvoice.heading_unitcost');?></td>
                            <td><?php $this->_('AdminClients.createinvoice.heading_tax');?></td>
                            <td><?php $this->_('AdminClients.createinvoice.heading_options');?></td>
                            <td class="icon last">&nbsp;</td>
                        </tr>
                    </th>
                </thead>
                <tbody>
                    <?php
                    $num_rows = max(1, count($this->Html->ifSet($vars->line_items, [])));
                    for ($i = 0; $i < $num_rows; $i++) {
                    ?>
                    <tr class="<?php echo $this->Html->concat(' ', ($i % 2 == 1) ? 'odd_row' : '', 'line_row');?>">
                        <td><?php $this->Form->fieldText('lines[description][]', $this->Html->ifSet($vars->line_items[$i]->description), ['class' => 'stretch line_item']);?></td>
                        <td class="small"><?php $this->Form->fieldText('lines[qty][]', $this->CurrencyFormat->truncateDecimal($this->Html->ifSet($vars->line_items[$i]->qty), 0), ['class' => 'stretch line_qty']);?></td>
                        <td class="small"><?php $this->Form->fieldText('lines[amount][]', $this->CurrencyFormat->format($this->Html->ifSet($vars->line_items[$i]->amount), $this->Html->ifSet($vars->currency), ['prefix' => false,'suffix' => false,'with_separator' => false,'code' => false,'decimals' => 4]), ['class' => 'stretch line_amount']);?></td>
                        <td class="extra_small"><?php $this->Form->fieldHidden('lines[tax][]', ($this->Html->ifSet($vars->line_items[$i]->tax) == 'true') ? 'true' : 'false');?> <?php $this->Form->fieldCheckbox('tax[]', 'true', ($this->Html->ifSet($vars->line_items[$i]->tax) == 'true'));?></td>
                        <td class="medium"><a class="line_row_add" href="#"><?php $this->_('AdminClients.createinvoice.option_add');?></a>, <a href="#" class="manage line_row_delete"><?php $this->_('AdminClients.createinvoice.option_delete');?></a></td>
                        <td class="last center"><i class="fa fa-arrows movable"></i></td>
                    </tr>
                    <?php
                    }
                    ?>
                </tbody>
            </table>
            <div class="row">
                <div class="col-sm-8">
                    <div class="pad">
                        <?php
                        $this->Form->label($this->_('AdminClients.createinvoice.field_datebilled', true), 'date_billed');
                        $this->Form->fieldText('date_billed', $this->Html->ifSet($vars->date_billed, $this->Date->format('Y-m-d')), ['id' => 'date_billed', 'class' => 'date']);
                        ?>
                    </div>
                    <div class="pad">
                        <?php
                        $this->Form->label($this->_('AdminClients.createinvoice.field_datedue', true), 'date_due');
                        $this->Form->fieldText('date_due', $this->Html->ifSet($vars->date_due), ['id' => 'date_due', 'class' => 'date']);
                        ?>
                    </div>
                    <div class="pad">
                        <?php
                        $this->Form->label($this->_('AdminClients.createinvoice.field_currency', true), 'currency');
                        $this->Form->fieldSelect('currency', $this->Html->ifSet($currencies), $this->Html->ifSet($vars->currency), ['id' => 'currency']);
                        ?>
                    </div>
                    <?php
                    if ($this->Html->ifSet($delivery_methods)) {
                    ?>
                    <div class="pad">
                        <ul>
                            <li>
                                <?php
                                $this->Form->label($this->_('AdminClients.createinvoice.field_invoicedelivery', true), 'delivery');
                                foreach ($delivery_methods as $method => $name) {
                                    $this->Form->fieldCheckbox('delivery[]', $method, in_array($method, (array)$this->Html->ifSet($vars->delivery)), ['id' => 'delivery[' . $method . ']', 'class' => 'inline']);
                                    $this->Form->label($name, 'delivery[' . $method . ']', ['class' => 'inline']);
                                }
                                ?>
                            </li>
                        </ul>
                    </div>
                    <?php
                    }
                    ?>
                    <div class="pad">
                        <ul>
                            <li>
                                <?php
                                $this->Form->label($this->_('AdminClients.createinvoice.field_autodebit', true));
                                $this->Form->fieldCheckbox('autodebit', '1', $this->Html->ifSet($vars->autodebit, '1') == '1', ['id' => 'autodebit', 'class' => 'inline']);
                                $this->Form->label($this->_('AdminClients.createinvoice.field_autodebit_text', true), 'autodebit', ['class' => 'inline']);
                                ?>
                                <span class="tooltip"><?php $this->_('AppController.tooltip.text');?><div><?php $this->_('AdminClients.createinvoice.tooltip_autodebit');?></div></span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="sub_total_box">
                        <div class="line totals_subtotal">
                            <span><?php $this->_('AdminClients.editinvoice.price_subtotal');?></span><em></em>
                        </div>
                        <?php
                        for ($i = 0; $i < 2; $i++) {
                        ?>
                        <div class="line totals_tax"<?php echo !isset($vars->taxes[$i]) ? ' style="display: none;"' : '';?>>
                            <span></span><em></em>
                        </div>
                        <?php
                        }
                        ?>
                        <div class="line total totals_total">
                            <span></span><strong><em></em></strong>
                        </div>
                        <?php
                        if ($this->Html->ifSet($vars->paid) > 0) {
                            $this->Form->fieldHidden('amount_paid', $vars->paid);
                        ?>
                        <div class="line totals_paid">
                            <span></span><em></em>
                        </div>
                        <div class="line total totals_due">
                            <span></span><strong><em></em></strong>
                        </div>
                        <?php
                        }
                        ?>
                    </div>
                </div>
            </div>

            <h4><a id="recurring" href="#" class="show_content"><i class="fa fa-caret-down"></i> <?php $this->_('AdminClients.createinvoice.section_recurringinvoice');?></a></h4>
            <div id="recurring_invoice">
                <div class="pad reverse">
                    <table class="table">
                        <tr class="heading_row">
                            <td><?php $this->Form->label($this->_('AdminClients.createinvoice.heading_term', true), 'term');?></td>
                            <td><?php $this->Form->label($this->_('AdminClients.createinvoice.heading_period', true), 'period');?></td>
                            <td><?php $this->Form->label($this->_('AdminClients.createinvoice.heading_duration', true), 'duration');?></td>
                            <td class="last"><?php $this->Form->label($this->_('AdminClients.createinvoice.heading_nextbilldate', true), 'recur_date_billed');?></td>
                        </tr>
                        <tr>
                            <td class="small"><?php $this->Form->fieldText('term', $this->Html->ifSet($vars->term), ['id' => 'term', 'class' => 'stretch']);?></td>
                            <td class="small"><?php $this->Form->fieldSelect('period', $this->Html->ifSet($periods), $this->Html->ifSet($vars->period, 'month'), ['id' => 'period']);?></td>
                            <td>
                                <?php
                                $this->Form->fieldRadio('duration', 'indefinitely', ($this->Html->ifSet($vars->duration, 'indefinitely') == 'indefinitely'), ['id' => 'indefinitely']);
                                $this->Form->label($this->_('AdminClients.createinvoice.field_duration_indefinitely', true), 'indefinitely', ['class' => 'inline']);
                                $this->Form->fieldRadio('duration', 'times', ($this->Html->ifSet($vars->duration) == 'times'), ['id' => 'duration']);
                                $this->Form->fieldText('duration_time', $this->Html->ifSet($vars->duration_time), ['id' => 'duration_time', 'class' => 'small']);
                                $this->Form->label($this->_('AdminClients.createinvoice.field_duration_times', true), 'duration_time', ['class' => 'inline']);
                                ?>
                            </td>
                            <td class="last medium">
                                <?php $this->Form->fieldText('recur_date_billed', $this->Html->ifSet($vars->recur_date_billed), ['id' => 'recur_date_billed', 'class' => 'date']);?>
                                <a href="#" class="calender"></a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <h4><a id="notes" href="#" class="show_content"><i class="fa fa-caret-down"></i> <?php $this->_('AdminClients.createinvoice.section_notes');?></a></h4>
            <div id="notes_section">
                <div class="pad reverse">
                    <ul>
                        <li>
                            <?php
                            $this->Form->label($this->_('AdminClients.createinvoice.field_notepublic', true), 'note_public');
                            $this->Form->fieldTextarea('note_public', $this->Html->ifSet($vars->note_public), ['id' => 'note_public']);
                            ?>
                        </li>
                        <li>
                            <?php
                            $this->Form->label($this->_('AdminClients.createinvoice.field_noteprivate', true), 'note_private');
                            $this->Form->fieldTextarea('note_private', $this->Html->ifSet($vars->note_private), ['id' => 'note_private']);
                            ?>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="button_row">
                <div class="auto_save"><span></span></div>

                <?php
                $this->Form->fieldHidden('invoice_id', '', ['id' => 'invoice_id']);
                $this->Form->fieldSubmit('save', $this->_('AdminClients.createinvoice.field_invoicesubmit', true), ['class' => 'btn btn-primary pull-right']);
                $this->Form->fieldSubmit('submit_draft', $this->_('AdminClients.createinvoice.field_invoicedraft', true), ['class' => 'btn btn-default pull-right']);
                ?>
            </div>

            <?php $this->Form->end();?>
        </div>

        <?php
        $this->Widget->end();
        ?>
<?php
$this->Javascript->setInline("
$(document).ready(function() {

    var totals_uri = '" . $this->Html->_($this->base_uri, true) . 'clients/calcLineTotals/' . $this->Html->_($client->id, true) . "';

    // On load calculate totals
    $('#create-invoice').blestaSetInvTotals(totals_uri);

    // Ensure the position of the recurring date billed calendar is within the view frame
    $('#recur_date_billed').dpSetPosition($.dpConst.POS_TOP, $.dpConst.POS_RIGHT);

    // Whenever the tax box is checked, we need to set the line tax to update
    $('input[name=\"tax[]\"]').change(function() {
        $('input[name=\"lines[tax][]\"]', $(this).parent()).val($(this).attr('checked') ? 'true' : 'false');
        $(this).blestaSetInvTotals(totals_uri);
    });

    // Set invoice totals when amount quantity, tax status, or currency changes
    $('input[name=\"lines[amount][]\"], input[name=\"lines[qty][]\"], #currency').change(function() {
        $(this).blestaSetInvTotals(totals_uri);
    });

    // Allow sort of invoice lines
    $('table.table.invoice tbody').blestaSortable();
    $('table.table.invoice tbody tr').hover(
        function() {
            $('.movable', this).show();
        },
        function() {
            $('.movable', this).hide();
        }
    );

    // If enter pressed while in line item field, convert to textarea
    $('input.line_item').keypress(function(e) {
        if (e.keyCode == 13) {
            var element = this;
            var textarea = $('<textarea>');
            for (var i=0, len=element.attributes.length; i < len; i++) {
                if (element.attributes[i].nodeName != 'type')
                    textarea.attr(element.attributes[i].nodeName, element.attributes[i].nodeValue);
            }
            textarea.insertBefore(element).focus().val($(this).val() + String.fromCharCode(e.keyCode));
            $(element).remove();
        }
    });

    $('#notes_section').hide();
    $('#recurring_invoice').hide();

    // Toggle notes and recurring sections
    $(this).blestaBindToggleEvent('#notes', '#notes_section');
    $(this).blestaBindToggleEvent('#recurring', '#recurring_invoice');

    // Check the 'number of times' field
    $('#duration_time').focus(function() {
        $('#duration').attr('checked', 'checked');
    });

    // Remove blank lines when the form is submitted
    $('#create-invoice').on('submit', function() {
        $('.line_row').each(function() {
            if ($(this).find('input.line_item').val().length <= 0
                && $(this).find('input.line_qty').val().length <= 0
                && $(this).find('input.line_amount').val().length <= 0
            ) {
                $(this).find('.line_row_delete').trigger('click');
            }
        });
    });

    // Automatically add a new blank line item after entering details into another
    $('.line_row input.line_item').on('change keyup paste', function() {
        // If entering data into one line item, create a new line item below it
        if ($(this).val().length <= 0) {
            return;
        }

        var blank_line_after = $(this).parents('tr.line_row').next().find('input.line_item').val();
        if (blank_line_after === undefined) {
            $(this).parents('.line_row').find('a.line_row_add').trigger('click');
        }
    });

    $('.line_row_add').click(function() {
        var fields = $('tr.line_row:first').clone(true);
        // Remove input text/hidden and textarea data
        $(fields).find('input:text,input:hidden,textarea').val('');
        // Remove checkbox/radio data
        $(fields).find('input:checkbox,input:radio').removeAttr('checked');
        // Unselect options
        $(fields).find('option:selected').removeAttr('selected');

        // Append the row below this row, assign the new row
        var line = $(this).closest('tr').after(fields).next();

        // Remove line item ID field from duplicated row
        $('.line_id', line).remove();

        // Hide the arrow icon for moving the row
        $('.movable', fields).hide();

        formatLineRows();

        return false;
    });

    $('.line_row_delete').click(function() {
        if ($('tr.line_row').length > 1) {
            var form = $(this).closest('form');

            // Move the line item ID field, then delete the row
            var line_item = $(this).closest('tr').find('.line_id').clone(true);
            $('tr.line_row:last').after(line_item);

            $(this).closest('tr').remove();

            // Update totals
            $(form).blestaSetInvTotals(totals_uri);

            formatLineRows();
        }
        return false;
    });

    // Format each line item row
    function formatLineRows() {
        $('tr.line_row').removeClass('odd_row');
        $('tr.line_row:nth-child(even)').addClass('odd_row');
    }

    var auto_save_interval = 60000; // 60 seconds

    /**
    * Auto save invoice
    *
    */
    function autoSave() {

        var form = $('#admin_clients_creatinvoice form');

        form.blestaRequest(form.attr('method'), form.attr('action'), form.serialize(),
            function(data) {
                var text = '" . $this->Html->safe($this->_('AdminClients.createinvoice.auto_save_error', true)) . "';
                var class_name = 'fa-times';
                if (data.success) {
                    text = '" . $this->Html->safe($this->_('AdminClients.createinvoice.auto_save_saved', true)) . "';
                    class_name = 'fa-check';

                    // Set the invoice ID so we can continue to update it
                    $('#invoice_id').val(data.invoice_id);

                    // Remove all existing line item IDs, we're going to replace them
                    $('.line_row .line_id').remove();

                    // Set the line item ID for each line item that was created
                    $('.line_row').each(function(index) {
                        if (data.invoice.line_items[index]) {
                            $(this).prepend('<input type=\"hidden\" name=\"lines[id][]\" value=\"' + data.invoice.line_items[index].id + '\" class=\"line_id\" />');
                        }
                    });
                }

                $('.button_row .auto_save span').text(text);
                $('.button_row .auto_save span').html('<i class=\"fa ' + class_name + '\"></i> ' + $('.button_row .auto_save span').text());

                $('.button_row .auto_save').delay(2000).fadeOut('slow');

                // Set the next auto save
                setTimeout(autoSave, auto_save_interval);
            },
            function() {
                // Set the next auto save
                setTimeout(autoSave, auto_save_interval);
            },
            {
                beforeSend: function() {
                    $('.button_row .auto_save').html('<i class=\"fa fa-spinner fa-pulse\"></i> <span></span>');
                    $('.button_row .auto_save span').text('" . $this->Html->safe($this->_('AdminClients.createinvoice.auto_save_saving', true)) . "');
                    $('.button_row .auto_save').show();
                },
                dataType: 'json'
            }
        );
    }

    // Begin the auto save process only after the form has gained focus on one of its input elements
    var focused = false;
    $('#admin_clients_creatinvoice input').focus(function() {
        if (!focused) {

            // Begin the auto save process
            setTimeout(autoSave, auto_save_interval);
            focused = true;
        }
    });
});
");
?>
