<div id="stripe-cc-form">
    <div id="card-element">
      <!-- A Stripe Element will be inserted here. -->
    </div>

    <!-- Used to display form errors. -->
    <div id="card-errors" role="alert"></div>
    <?php $this->Form->fieldHidden('reference_id', '', ['id' => 'reference_id']);?>

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Create a Stripe client.
        var stripe = Stripe('<?php $this->Html->_($meta['publishable_key']);?>');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling passed when creating the card Element.
        var style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                width: '250px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {style: style});

        $(document).ready(function() {
            $(this).blestaSetHeadTag("link", {media:"screen", type:"text/css", rel:"stylesheet", href: "<?php echo $this->Html->safe($this->view_dir . 'css/styles.css');?>"});

            // Add an instance of the card Element into the `card-element` <div>.
            card.mount('#card-element');

            // Handle real-time validation errors from the card Element.
            card.on('change', function(event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                } else {
                    displayError.textContent = '';
                }
                $(this).blestaEnableFormSubmission($('#card-element').closest('form'));

                // If payment details changed setup a new card
                $('#reference_id').val('');
                // Reset submission events by triggering a payment detail change
                $('#reference_id').change();
            });

            // Handle form submission.
            $('#card-element').closest('form').on('submit', submitCard);

            // If payment details changed setup a new card
            $('#payment_details, #account, #details').on('change', function() {
                $('#card-element').closest('form').off('submit', submitCard);
                $('#card-element').closest('form').on('submit', submitCard);
            });
        });

        function submitCard(event) {
            // Only try and setup a card if we are not using an existing one
            if (!($('#pay_with_account').attr('checked') === 'checked' || $('select[name=payment_type]').val() === '')) {
                event.preventDefault();
                event.stopImmediatePropagation();
                var payment_method_data = {
                    'billing_details': {
                        'name': $('#first_name').val() + ' ' + $('#last_name').val(),
                        'address': {
                            'city': $('#city').val(),
                            'country': $('#country').val(),
                            'line1': $('#address1').val(),
                            'line2': $('#address2').val(),
                            'postal_code': $('#zip').val(),
                            'state': $('#state').val()
                        }
                    }
                };

                if ($('input[name="save_details"]').prop('checked') === false
                    || $('input[name="save_details"]').not('#client_method input').not('#admin_clients_makepayment input').length > 0
                ) {
                    // Create PaymentMethod that is not associated with a SetupIntent
                    stripe.createPaymentMethod('card', card, payment_method_data).then(function(result) {
                        if (result.error) {
                            var errorElement = document.getElementById('card-errors');
                            errorElement.textContent = result.error.message;
                            $(this).blestaEnableFormSubmission($('#card-element').closest('form'));
                        } else {
                            // Store the PaymentMethod ID as the reference_id and resubmit the form, bypassing this handler
                            storeReferenceAndSubmit(result.paymentMethod.id);
                        }
                    });
                } else {
                    var setup_secret = '<?php $this->Html->_($setup_intent->client_secret);?>';
                    var setup_data = {'payment_method_data': payment_method_data};

                    // Create a PaymentMethod that is associated with a SetupIntent
                    stripe.handleCardSetup(setup_secret, card, setup_data).then(function(result) {
                        if (result.error) {
                            var errorElement = document.getElementById('card-errors');
                            errorElement.textContent = result.error.message;
                            $(this).blestaEnableFormSubmission($('#card-element').closest('form'));
                        } else {
                            // Store the PaymentMethod ID as the reference_id and resubmit the form, bypassing this handler
                            storeReferenceAndSubmit(result.setupIntent.payment_method);
                        }
                    });
                }
            }
        }

        function storeReferenceAndSubmit(reference_id)
        {
            $('#reference_id').val(reference_id);
            $('#card-element').closest('form').off('submit', submitCard);
            $(this).blestaEnableFormSubmission($('#card-element').closest('form'));
            $('#card-element').closest('form').submit();
        }
    </script>
</div>
